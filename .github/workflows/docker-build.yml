name: Build Docker Image

on:
  push:
    branches: [ main ]
    tags:
      - '*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      purge_cache:
        description: 'Purge build cache'
        required: false
        default: false
        type: boolean

jobs:
  build:
    name: Build ${{ matrix.tag }} base image (${{ github.event_name }} by ${{ github.actor }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        tag:
          - humble

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout git repository
      uses: actions/checkout@v3

    - name: Determine branch name
      run: echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Generate image name
      id: docker_image_name
      run: echo "docker_image=${{ github.repository }}" | tr '[:upper:]' '[:lower:]' | sed 's/[^0-9a-zA-Z=_,\/]/-/g' >> ${GITHUB_OUTPUT}

    - name: Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        flavor: |
          latest=false
        labels: |
          org.opencontainers.image.description=L-CAS ROS2 Docker Image (flavour: ${{ matrix.tag }}) for Steam Deck
          org.opencontainers.image.authors=L-CAS Team
        # list of Docker images to use as base name for tags
        images: |
          ghcr.io/${{ steps.docker_image_name.outputs.docker_image }}
        tags: |
          type=raw,value=${{ matrix.tag }}-staging
          type=raw,enable=${{ github.event_name != 'pull_request' }},value=${{ matrix.tag }}
          type=ref,enable=${{ github.event_name != 'pull_request' }},event=branch,prefix=${{ matrix.tag }}-
          type=semver,pattern={{version}},prefix=${{ matrix.tag }}-
          type=semver,pattern={{major}}.{{minor}},prefix=${{ matrix.tag }}-
          type=semver,pattern={{major}},prefix=${{ matrix.tag }}-

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64
        push: true
        cache-from: ${{ inputs.purge_cache == 'true' && 'type=local,src=/dev/null' || 'type=registry,ref=ghcr.io/${{ github.repository }}/cache/${{ steps.docker_image_name.outputs.docker_image }}:${{ matrix.tag }}' }}
        cache-to: type=registry,ref=ghcr.io/${{ github.repository }}/cache/${{ steps.docker_image_name.outputs.docker_image }}:${{ matrix.tag }},mode=max
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
            BASE_IMAGE=ros:${{ matrix.tag }}
            BRANCH=${{ env.BRANCH }}
